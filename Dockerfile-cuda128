# Use NVIDIA CUDA as base image for GPU support
FROM nvidia/cuda:12.8.0-cudnn-runtime-ubuntu24.04

# Set only basic environment variables needed for build
ENV DEBIAN_FRONTEND=noninteractive \
    TZ="Etc/UTC" \
    PATH="/root/.local/bin/:$PATH"

# Install minimal runtime dependencies
RUN apt-get update && \
    apt-get install -y \
        python3 \
        python3-pip \
        python3-venv \
        postgresql-client \
        software-properties-common \
        tzdata \
        ffmpeg \
        curl \
        unzip \
        git && \
    # Add the PPA and install audiowaveform
    add-apt-repository ppa:chris-needham/ppa && \
    apt-get update && \
    apt-get install -y audiowaveform && \
    # Install UV
    curl -sSL https://astral.sh/uv/install.sh -o /uv-installer.sh && \
    sh /uv-installer.sh && \
    rm /uv-installer.sh && \
    # Install Node.js
    curl -fsSL https://deb.nodesource.com/setup_23.x | bash - && \
    apt-get install -y nodejs && \
    # Clean up
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy only the files needed for dependency installation
COPY package.json package-lock.json ./

# Install node dependencies
RUN npm ci

# Copy the rest of the files needed for the build
COPY . .

# Install necessary build dependencies
RUN npm install -D autoprefixer tailwindcss postcss tailwindcss-animate

# Build the application using generic placeholder values (not used at runtime)
ENV NODE_ENV=build \
    BUILD_ONLY=true \
    HARDWARE_ACCEL=gpu

# Run the build without any environment variables that would be needed at runtime
RUN npm run build

# Ensure entrypoint script is executable
RUN chmod +x docker-entrypoint.sh

# Expose port
EXPOSE 3000

# Define default command (entrypoint will read actual environment variables at runtime)
CMD ["./docker-entrypoint.sh"]